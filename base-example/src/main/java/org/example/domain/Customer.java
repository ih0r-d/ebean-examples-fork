package org.example.domain;

import io.ebean.annotation.DbArray;
import io.ebean.annotation.DbComment;
import org.example.domain.finder.CustomerFinder;

import jakarta.persistence.Column;
import jakarta.persistence.Embedded;
import jakarta.persistence.Entity;
import jakarta.persistence.Lob;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import java.net.InetAddress;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

import static jakarta.persistence.CascadeType.PERSIST;

/**
 * Customer entity bean.
 * <p>
 * This example shows an entity bean without a default constructor. The name property is
 * expected to be final and non-null. Note the InsertCustomerTest.testRef() test showing
 * loading the partially loaded bean.
 */
@DbComment("Customer table general comment")
@Entity
@Table(name = "customer")
public class Customer extends BaseModel {

  public static final CustomerFinder find = new CustomerFinder();

  boolean inactive;

  @NotNull
  @Column(unique = true)
  @Size(min = 1, max = 100)
  String name;

  @DbComment("The date the customer first registered")
  LocalDate registered;

  @DbArray
  List<UUID> uids = new ArrayList<>();

  @Embedded
  SomeEmbedd some;

  PhoneNumber phoneNumber;

  @Lob
  String comments;

  @ManyToOne(cascade = PERSIST)
  Address billingAddress;

  @ManyToOne(cascade = PERSIST)
  Address shippingAddress;

  @OneToMany(mappedBy = "customer", cascade = PERSIST)
  List<Contact> contacts;

  @OneToMany(mappedBy = "customer")
  List<Order> orders;

  InetAddress lastAddr;

  public Customer(String name) {
    this.name = name;
  }

  public String toString() {
    return "id:" + id + " name:" + name;
  }

  /**
   * Helper method to add a contact to the customer.
   */
  public void addContact(Contact contact) {
    contacts.add(contact);
  }

  // AUTOGENERATED START
  public List<UUID> getUids() {
    return uids;
  }

  public void setUids(List<UUID> uids) {
    this.uids = uids;
  }

  public boolean isInactive() {
    return inactive;
  }

  public void setInactive(boolean inactive) {
    this.inactive = inactive;
  }

  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public PhoneNumber getPhoneNumber() {
    return phoneNumber;
  }

  public void setPhoneNumber(PhoneNumber phoneNumber) {
    this.phoneNumber = phoneNumber;
  }

  public LocalDate getRegistered() {
    return registered;
  }

  public void setRegistered(LocalDate registered) {
    this.registered = registered;
  }

  public String getComments() {
    return comments;
  }

  public Customer comments(String comments) {
    this.comments = comments;
    return this;
  }

  public Address getBillingAddress() {
    return billingAddress;
  }

  public void setBillingAddress(Address billingAddress) {
    this.billingAddress = billingAddress;
  }

  public Address getShippingAddress() {
    return shippingAddress;
  }

  public void setShippingAddress(Address shippingAddress) {
    this.shippingAddress = shippingAddress;
  }

  public List<Contact> getContacts() {
    return contacts;
  }

  public void setContacts(List<Contact> contacts) {
    this.contacts = contacts;
  }

  public List<Order> getOrders() {
    return orders;
  }

  public void setOrders(List<Order> orders) {
    this.orders = orders;
  }
  // AUTOGENERATED END
}
